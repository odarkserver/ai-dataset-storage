import { writeFileSync, existsSync } from 'fs';
import { resolve } from 'path';
import { PrismaClient } from '@prisma/client';

let initPromise: Promise<void> | null = null;
let isInitialized = false;

export async function initializeDatabase() {
  // Use a singleton pattern to ensure initialization only happens once
  if (isInitialized) {
    return Promise.resolve();
  }

  if (initPromise) {
    return initPromise;
  }

  initPromise = (async () => {
    try {
      // Create an empty SQLite database file if it doesn't exist
      const dbPath = resolve(process.cwd(), 'dev.db');

      if (!existsSync(dbPath)) {
        // Create an empty SQLite database file
        writeFileSync(dbPath, Buffer.from([
          0x53, 0x51, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x33, 0x00,
          0x10, 0x00, 0x01, 0x01, 0x00, 0x40, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
        ]));
        console.log('✅ SQLite database file created at:', dbPath);
      }

      // Try to create tables using Prisma
      const prisma = new PrismaClient();

      try {
        // Test basic connectivity
        await prisma.$queryRaw`PRAGMA table_list`;
        console.log('✅ Database connection verified');
      } catch (connectionError) {
        console.warn('Connection test warning:', connectionError);
      }

      await prisma.$disconnect();
      isInitialized = true;
      console.log('✅ Database initialization complete');
    } catch (error) {
      console.error('❌ Database initialization error:', error);
      // Continue anyway - migrations will be run by Prisma when needed
    }
  })();

  return initPromise;
}
